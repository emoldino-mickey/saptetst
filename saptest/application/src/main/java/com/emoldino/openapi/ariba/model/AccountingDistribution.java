

/*
 * Ariba Network Purchase Orders Buyer API
 * The Purchase Order API enables you to retrieve purchase order header and item details from the Ariba Network.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.emoldino.openapi.ariba.model;

import java.util.Objects;
import java.util.Arrays;
import com.emoldino.openapi.ariba.model.AccountingDistributionAccountingSegments;
import com.emoldino.openapi.ariba.model.AccountingDistributionCharge;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.google.gson.annotations.SerializedName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 *  The accounting distribution identifier.  An accounting distribution divides the cost of an item among multiple parties.  Suppliers return this identifier on invoices to facilitate the buyerâ€™s reconciliation process.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

// CHECKSTYLE:OFF
public class AccountingDistribution 
// CHECKSTYLE:ON
{
  @JsonProperty("accountingSegments")
  @SerializedName("accountingSegments")
  private List<AccountingDistributionAccountingSegments> accountingSegments = new ArrayList<>();

  @JsonProperty("charge")
  @SerializedName("charge")
  private AccountingDistributionCharge charge;

  @JsonProperty("accountingName")
  @SerializedName("accountingName")
  private String accountingName;


   /**
   * Set the accountingSegments of this {@link AccountingDistribution} instance and return the same instance.
   *
   * @param accountingSegments  The accountingSegments of this {@link AccountingDistribution}
   * @return The same instance of this {@link AccountingDistribution} class
   */
   @Nonnull public AccountingDistribution accountingSegments(@Nonnull final List<AccountingDistributionAccountingSegments> accountingSegments) {
    this.accountingSegments = accountingSegments;
    return this;
  }
  /**
  * Add one AccountingSegments instance to this {@link AccountingDistribution}.
  * @param accountingSegmentsItem The AccountingSegments that should be added
  * @return The same instance of type {@link AccountingDistribution}
  */
  @Nonnull public AccountingDistribution addAccountingSegmentsItem( @Nonnull final AccountingDistributionAccountingSegments accountingSegmentsItem) {
    if (this.accountingSegments == null) {
      this.accountingSegments = new ArrayList<>();
    }
    this.accountingSegments.add(accountingSegmentsItem);
    return this;
  }

   /**
   * Get accountingSegments
   * @return accountingSegments  The accountingSegments of this {@link AccountingDistribution} instance.
  **/
  @Nonnull public List<AccountingDistributionAccountingSegments> getAccountingSegments() {
    return accountingSegments;
  }

  /**
  * Set the accountingSegments of this {@link AccountingDistribution} instance.
  *
  * @param accountingSegments  The accountingSegments of this {@link AccountingDistribution}
  */
  public void setAccountingSegments( @Nonnull final List<AccountingDistributionAccountingSegments> accountingSegments) {
    this.accountingSegments = accountingSegments;
  }

   /**
   * Set the charge of this {@link AccountingDistribution} instance and return the same instance.
   *
   * @param charge  The charge of this {@link AccountingDistribution}
   * @return The same instance of this {@link AccountingDistribution} class
   */
   @Nonnull public AccountingDistribution charge(@Nonnull final AccountingDistributionCharge charge) {
    this.charge = charge;
    return this;
  }

   /**
   * Get charge
   * @return charge  The charge of this {@link AccountingDistribution} instance.
  **/
  @Nonnull public AccountingDistributionCharge getCharge() {
    return charge;
  }

  /**
  * Set the charge of this {@link AccountingDistribution} instance.
  *
  * @param charge  The charge of this {@link AccountingDistribution}
  */
  public void setCharge( @Nonnull final AccountingDistributionCharge charge) {
    this.charge = charge;
  }

   /**
   * Set the accountingName of this {@link AccountingDistribution} instance and return the same instance.
   *
   * @param accountingName  The accountingName of this {@link AccountingDistribution}
   * @return The same instance of this {@link AccountingDistribution} class
   */
   @Nonnull public AccountingDistribution accountingName(@Nonnull final String accountingName) {
    this.accountingName = accountingName;
    return this;
  }

   /**
   * Get accountingName
   * @return accountingName  The accountingName of this {@link AccountingDistribution} instance.
  **/
  @Nonnull public String getAccountingName() {
    return accountingName;
  }

  /**
  * Set the accountingName of this {@link AccountingDistribution} instance.
  *
  * @param accountingName  The accountingName of this {@link AccountingDistribution}
  */
  public void setAccountingName( @Nonnull final String accountingName) {
    this.accountingName = accountingName;
  }
  @Override
  public boolean equals(@Nullable final Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final AccountingDistribution accountingDistribution = (AccountingDistribution) o;
    return Objects.equals(this.accountingSegments, accountingDistribution.accountingSegments) &&
        Objects.equals(this.charge, accountingDistribution.charge) &&
        Objects.equals(this.accountingName, accountingDistribution.accountingName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountingSegments, charge, accountingName);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class AccountingDistribution {\n");
    sb.append("    accountingSegments: ").append(toIndentedString(accountingSegments)).append("\n");
    sb.append("    charge: ").append(toIndentedString(charge)).append("\n");
    sb.append("    accountingName: ").append(toIndentedString(accountingName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

