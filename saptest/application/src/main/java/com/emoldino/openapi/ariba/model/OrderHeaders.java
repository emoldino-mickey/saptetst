

/*
 * Ariba Network Purchase Orders Buyer API
 * The Purchase Order API enables you to retrieve purchase order header and item details from the Ariba Network.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.emoldino.openapi.ariba.model;

import java.util.Objects;
import java.util.Arrays;
import com.emoldino.openapi.ariba.model.OrderHeader;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.google.gson.annotations.SerializedName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * OrderHeaders
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

// CHECKSTYLE:OFF
public class OrderHeaders 
// CHECKSTYLE:ON
{
  @JsonProperty("limit")
  @SerializedName("limit")
  private Integer limit;

  @JsonProperty("firstPage")
  @SerializedName("firstPage")
  private Boolean firstPage;

  @JsonProperty("lastPage")
  @SerializedName("lastPage")
  private Boolean lastPage;

  @JsonProperty("count")
  @SerializedName("count")
  private Long count;

  @JsonProperty("totalPages")
  @SerializedName("totalPages")
  private Integer totalPages;

  @JsonProperty("content")
  @SerializedName("content")
  private List<OrderHeader> content = new ArrayList<>();

  @JsonProperty("offset")
  @SerializedName("offset")
  private Integer offset;


   /**
   * Set the limit of this {@link OrderHeaders} instance and return the same instance.
   *
   * @param limit  The limit of this {@link OrderHeaders}
   * @return The same instance of this {@link OrderHeaders} class
   */
   @Nonnull public OrderHeaders limit(@Nonnull final Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit  The limit of this {@link OrderHeaders} instance.
  **/
  @Nonnull public Integer getLimit() {
    return limit;
  }

  /**
  * Set the limit of this {@link OrderHeaders} instance.
  *
  * @param limit  The limit of this {@link OrderHeaders}
  */
  public void setLimit( @Nonnull final Integer limit) {
    this.limit = limit;
  }

   /**
   * Set the firstPage of this {@link OrderHeaders} instance and return the same instance.
   *
   * @param firstPage  The firstPage of this {@link OrderHeaders}
   * @return The same instance of this {@link OrderHeaders} class
   */
   @Nonnull public OrderHeaders firstPage(@Nonnull final Boolean firstPage) {
    this.firstPage = firstPage;
    return this;
  }

   /**
   * Get firstPage
   * @return firstPage  The firstPage of this {@link OrderHeaders} instance.
  **/
  @Nonnull public Boolean isFirstPage() {
    return firstPage;
  }

  /**
  * Set the firstPage of this {@link OrderHeaders} instance.
  *
  * @param firstPage  The firstPage of this {@link OrderHeaders}
  */
  public void setFirstPage( @Nonnull final Boolean firstPage) {
    this.firstPage = firstPage;
  }

   /**
   * Set the lastPage of this {@link OrderHeaders} instance and return the same instance.
   *
   * @param lastPage  The lastPage of this {@link OrderHeaders}
   * @return The same instance of this {@link OrderHeaders} class
   */
   @Nonnull public OrderHeaders lastPage(@Nonnull final Boolean lastPage) {
    this.lastPage = lastPage;
    return this;
  }

   /**
   * Get lastPage
   * @return lastPage  The lastPage of this {@link OrderHeaders} instance.
  **/
  @Nonnull public Boolean isLastPage() {
    return lastPage;
  }

  /**
  * Set the lastPage of this {@link OrderHeaders} instance.
  *
  * @param lastPage  The lastPage of this {@link OrderHeaders}
  */
  public void setLastPage( @Nonnull final Boolean lastPage) {
    this.lastPage = lastPage;
  }

   /**
   * Set the count of this {@link OrderHeaders} instance and return the same instance.
   *
   * @param count  The count of this {@link OrderHeaders}
   * @return The same instance of this {@link OrderHeaders} class
   */
   @Nonnull public OrderHeaders count(@Nonnull final Long count) {
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count  The count of this {@link OrderHeaders} instance.
  **/
  @Nonnull public Long getCount() {
    return count;
  }

  /**
  * Set the count of this {@link OrderHeaders} instance.
  *
  * @param count  The count of this {@link OrderHeaders}
  */
  public void setCount( @Nonnull final Long count) {
    this.count = count;
  }

   /**
   * Set the totalPages of this {@link OrderHeaders} instance and return the same instance.
   *
   * @param totalPages  The totalPages of this {@link OrderHeaders}
   * @return The same instance of this {@link OrderHeaders} class
   */
   @Nonnull public OrderHeaders totalPages(@Nonnull final Integer totalPages) {
    this.totalPages = totalPages;
    return this;
  }

   /**
   * Get totalPages
   * @return totalPages  The totalPages of this {@link OrderHeaders} instance.
  **/
  @Nonnull public Integer getTotalPages() {
    return totalPages;
  }

  /**
  * Set the totalPages of this {@link OrderHeaders} instance.
  *
  * @param totalPages  The totalPages of this {@link OrderHeaders}
  */
  public void setTotalPages( @Nonnull final Integer totalPages) {
    this.totalPages = totalPages;
  }

   /**
   * Set the content of this {@link OrderHeaders} instance and return the same instance.
   *
   * @param content  The content of this {@link OrderHeaders}
   * @return The same instance of this {@link OrderHeaders} class
   */
   @Nonnull public OrderHeaders content(@Nonnull final List<OrderHeader> content) {
    this.content = content;
    return this;
  }
  /**
  * Add one Content instance to this {@link OrderHeaders}.
  * @param contentItem The Content that should be added
  * @return The same instance of type {@link OrderHeaders}
  */
  @Nonnull public OrderHeaders addContentItem( @Nonnull final OrderHeader contentItem) {
    if (this.content == null) {
      this.content = new ArrayList<>();
    }
    this.content.add(contentItem);
    return this;
  }

   /**
   * Get content
   * @return content  The content of this {@link OrderHeaders} instance.
  **/
  @Nonnull public List<OrderHeader> getContent() {
    return content;
  }

  /**
  * Set the content of this {@link OrderHeaders} instance.
  *
  * @param content  The content of this {@link OrderHeaders}
  */
  public void setContent( @Nonnull final List<OrderHeader> content) {
    this.content = content;
  }

   /**
   * Set the offset of this {@link OrderHeaders} instance and return the same instance.
   *
   * @param offset  The offset of this {@link OrderHeaders}
   * @return The same instance of this {@link OrderHeaders} class
   */
   @Nonnull public OrderHeaders offset(@Nonnull final Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset  The offset of this {@link OrderHeaders} instance.
  **/
  @Nonnull public Integer getOffset() {
    return offset;
  }

  /**
  * Set the offset of this {@link OrderHeaders} instance.
  *
  * @param offset  The offset of this {@link OrderHeaders}
  */
  public void setOffset( @Nonnull final Integer offset) {
    this.offset = offset;
  }
  @Override
  public boolean equals(@Nullable final Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final OrderHeaders orderHeaders = (OrderHeaders) o;
    return Objects.equals(this.limit, orderHeaders.limit) &&
        Objects.equals(this.firstPage, orderHeaders.firstPage) &&
        Objects.equals(this.lastPage, orderHeaders.lastPage) &&
        Objects.equals(this.count, orderHeaders.count) &&
        Objects.equals(this.totalPages, orderHeaders.totalPages) &&
        Objects.equals(this.content, orderHeaders.content) &&
        Objects.equals(this.offset, orderHeaders.offset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(limit, firstPage, lastPage, count, totalPages, content, offset);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class OrderHeaders {\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    firstPage: ").append(toIndentedString(firstPage)).append("\n");
    sb.append("    lastPage: ").append(toIndentedString(lastPage)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

